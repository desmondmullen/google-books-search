{"version":3,"sources":["utils/API.js","components/BtnDelete/index.js","components/SaveNotice.js","components/List/index.js","pages/Saved.js","components/BtnSave/index.js","components/Form/index.js","pages/Search.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["socket","io","API","getBooks","axios","get","getBook","id","saveBook","theUrl","then","response","data","_response$data$volume","volumeInfo","title","authors","previewLink","description","replace","thumbnail","imageLinks","emit","concat","post","catch","error","console","log","deleteBook","delete","searchGoogle","query","theQuery","theTitle","trim","theAuthor","author","theSubject","subject","split","join","BtnDelete","props","react_default","a","createElement","Object","assign","className","role","tabIndex","SaveNotice","Fragment","List","_ref","children","ListItem","_ref2","Saved","state","books","loadBooks","res","_this","setState","err","event","target","getAttribute","this","_this2","components_SaveNotice","length","map","book","key","components_BtnDelete","data-id","onClick","href","rel","src","alt","Component","BtnSave","Input","FormBtn","Search","savedBookIds","getSavedBookIds","forEach","i","push","theId","updateSaved","saved","objectSpread","handleInputChange","_event$target","name","value","defineProperty","handleFormSubmit","preventDefault","items","includes","onChange","onSubmit","placeholder","components_BtnSave","Nav","react_router_dom","to","activeStyle","fontWeight","textDecoration","App","components_Nav","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.36a5a85b.chunk.js","sourcesContent":["import axios from 'axios'\n\nimport * as io from 'socket.io-client'\nconst socket = io()\n\nconst baseUrl = 'https://www.googleapis.com/books/v1/volumes?q='\nconst apiKey = '&key=AIzaSyBnwnrcNwOsL8hcsCgR-0LE-pyvCDE0s5I'\n\nexport default {\n  getBooks: function () {\n    return axios.get('/api/books')\n  },\n  getBook: function (id) {\n    return axios.get('/api/books/' + id)\n  },\n  saveBook: function (id) {\n    let theUrl = 'https://www.googleapis.com/books/v1/volumes/' + id\n    axios.get(theUrl)\n      .then(function (response) {\n        const id = response.data.id;\n        const { title, authors, previewLink } = response.data.volumeInfo;\n        const description = (response.data.volumeInfo.description).replace(/(<([^>]+)>)/ig, \"\");\n        const thumbnail = response.data.volumeInfo.imageLinks.thumbnail;\n        socket.emit('chat message', `*** <em>${title}</em> was just added to Saved ***`);\n        return axios.post('/api/books', {\n          id,\n          title,\n          authors,\n          description,\n          previewLink,\n          thumbnail\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  },\n  deleteBook: function (id) {\n    return axios.delete('/api/books/' + id)\n  },\n  searchGoogle: function (query) {\n    let theQuery = ''\n    const theTitle = query.title.trim();\n    const theAuthor = query.author.trim();\n    const theSubject = query.subject.trim();\n    if (theTitle) {\n      theQuery = 'intitle:' + theTitle.split(' ').join('+');\n    }\n    if (theAuthor) {\n      if (theQuery) { theQuery += '+' };\n      theQuery += 'inauthor:' + theAuthor.split(' ').join('+');\n    }\n    if (theSubject) {\n      if (theQuery) { theQuery += '+' };\n      theQuery += 'subject:' + theSubject.split(' ').join('+');\n    }\n    return axios.get(baseUrl + theQuery + apiKey)\n  }\n}","import React from 'react'\nimport '../../App.css'\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction BtnDelete (props) {\n  return (\n    <span className='btn-delete btn' {...props} role='button' tabIndex='0'>\n      Remove from Saved\n    </span>\n  )\n}\n\nexport default BtnDelete\n","import React from 'react';\n\nfunction SaveNotice () {\n    return (\n        <>\n            <div id='save-notice'>&nbsp;</div>\n        </ >\n    );\n}\n\nexport default SaveNotice;","import React from 'react'\nimport '../../App.css'\n\nexport function List ({ children }) {\n  return (\n    <div className='list'>\n      <ul className='list-ul'>{children}</ul>\n    </div>\n  )\n}\n\nexport function ListItem ({ children }) {\n  return <li className='list-li'>{children}</li>\n}\n","import React, { Component } from 'react';\nimport API from '../utils/API';\nimport BtnDelete from '../components/BtnDelete';\nimport SaveNotice from '../components/SaveNotice';\nimport { List, ListItem } from '../components/List';\n\nclass Saved extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount () {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res => this.setState({ books: res.data }))\n      .catch(err => console.log(err));\n  };\n\n  deleteBook = (event) => {\n    API.deleteBook(event.target.getAttribute('data-id'))\n      .then(res => {\n        this.loadBooks()\n      })\n      .catch(err => console.log(err));\n  }\n\n  render () {\n    return (\n      <>\n        <br />\n        <SaveNotice />\n        {this.state.books.length ? (\n          <List>\n            {this.state.books.map(book => (\n              <ListItem key={book.id}>\n                <>\n                  <div className='book-topbar'><section className='book-buttons'><BtnDelete data-id={book.id} onClick={this.deleteBook} /> <a href={book.previewLink} className='btn' target='_blank' rel='noopener noreferrer'>View</a></section><section className='book-title'>{book.title}</section><section className='book-author'>by {book.authors}</section></div><div><img className='book-thumbnail' src={book.thumbnail} alt='' /><section className='book-description'>{book.description}</section></div></ >\n              </ListItem>\n            ))}\n          </List>\n        ) : (\n            <>\n              <h3 className='no-results'>No Results to Display</h3>\n            </ >\n          )}\n      </ >\n    );\n  }\n}\n\nexport default Saved;\n","import React from 'react'\nimport '../../App.css'\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction BtnSave (props) {\n  return (\n    <span className='btn-save btn' {...props} role='button' tabIndex='0'>\n      Add to Saved\n    </span>\n  )\n}\n\nexport default BtnSave\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input (props) {\n  return (\n    <input className=\"\" {...props} />\n  );\n}\n\nexport function TextArea (props) {\n  return (\n    <div className=\"\">\n      <textarea className=\"\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn (props) {\n  return (\n    <button {...props} className=\"btn-search btn\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { Component } from 'react';\nimport API from '../utils/API';\nimport BtnSave from '../components/BtnSave';\nimport BtnDelete from '../components/BtnDelete';\nimport SaveNotice from '../components/SaveNotice';\nimport { List, ListItem } from '../components/List';\nimport { Input, FormBtn } from '../components/Form';\nimport '../App.css'\n\nclass Search extends Component {\n  state = {\n    books: [],\n    savedBookIds: [],\n    title: '',\n    author: '',\n    subject: ''\n  };\n\n  componentDidMount () {\n    this.getSavedBookIds();\n  }\n\n  getSavedBookIds = () => {\n    API.getBooks()\n      .then(res => {\n        let savedBookIds = [];\n        res.data.forEach((book, i) => {\n          savedBookIds.push(book.id)\n        })\n        console.log(savedBookIds);\n        this.setState({ savedBookIds: savedBookIds })\n      })\n      .catch(err => console.log(err));\n  }\n\n  saveBook = (event) => {\n    const theId = event.target.getAttribute('data-id')\n    API.saveBook(theId)\n    this.updateSaved(theId, true)\n  }\n\n  getBook = event => {\n    API.getBook(event.target.getAttribute('data-id'))\n      .then(res => this.setState({ books: res.data }))\n      .catch(err => console.log(err));\n  }\n\n  deleteBook = (event) => {\n    const theId = event.target.getAttribute('data-id')\n    API.deleteBook(theId)\n      .then(res => {\n        this.updateSaved(theId, false)\n      })\n      .catch(err => console.log(err));\n  }\n\n  updateSaved = (theId, saved) => {\n    let books = this.state.books;\n    for (let i = 0; i < books.length; i++) {\n      if (books[i].id === theId) {\n        books[i] = { ...books[i], saved: saved };\n        this.setState({ books })\n        break;\n      }\n    }\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.title || this.state.author || this.state.subject) {\n      API.searchGoogle({\n        title: this.state.title,\n        author: this.state.author,\n        subject: this.state.subject\n      })\n        .then(res => {\n          let books = [];\n          res.data.items.forEach((book, i) => {\n            let id = ''\n            let title = ''\n            let authors = ''\n            let description = ''\n            let previewLink = ''\n            let thumbnail = ''\n            let saved = false\n            if (book.id) {\n              id = book.id;\n            }\n            if (book.volumeInfo.title) {\n              title = book.volumeInfo.title;\n            }\n            if (book.volumeInfo.authors) {\n              authors = book.volumeInfo.authors;\n              if (authors.length > 1) {\n                authors = book.volumeInfo.authors.join(', ');\n              }\n            }\n            if (book.volumeInfo.description) {\n              description = book.volumeInfo.description;\n            }\n            if (book.volumeInfo.previewLink) {\n              previewLink = book.volumeInfo.previewLink;\n            }\n            if ('imageLinks' in book.volumeInfo) {\n              if ('thumbnail' in book.volumeInfo.imageLinks) {\n                thumbnail = book.volumeInfo.imageLinks.thumbnail;\n              }\n            }\n            if (this.state.savedBookIds.includes(book.id)) { saved = true }\n            books.push({\n              id,\n              title,\n              authors,\n              description,\n              previewLink,\n              thumbnail,\n              saved\n            });\n          });\n          this.setState({\n            books,\n            title: '',\n            author: '',\n            subject: ''\n          });\n        })\n        .catch(err => console.log(err));\n    }\n  };\n\n\n  render () {\n    return (\n      <>\n        <br />\n        <SaveNotice />\n        <form>\n          <div className='search-bar'><div className='search-fields'>\n            Title: <Input\n              value={this.state.title}\n              onChange={this.handleInputChange}\n              onSubmit={this.handleFormSubmit}\n              name='title'\n              placeholder='Title'\n            /> Author: <Input\n              value={this.state.author}\n              onChange={this.handleInputChange}\n              onSubmit={this.handleFormSubmit}\n              name='author'\n              placeholder='Author'\n            /> Subject: <Input\n              value={this.state.subject}\n              onChange={this.handleInputChange}\n              onSubmit={this.handleFormSubmit}\n              name='subject'\n              placeholder='Subject'\n            /></div><FormBtn onClick={this.handleFormSubmit}>Search</FormBtn></div>\n        </form>\n        {this.state.books.length ? (\n          <List>\n            {this.state.books.map(book => (\n              <ListItem key={book.id}>\n                <>\n                  <div className='book-topbar'><section className='book-buttons'>{book.saved ? <BtnDelete data-id={book.id} onClick={this.deleteBook} /> : <BtnSave data-id={book.id} onClick={this.saveBook} />} <a href={book.previewLink} className='btn' target='_blank' rel='noopener noreferrer'>View</a></section>\n                    <section className='book-title'>{book.title}</section><section className='book-author'>by {book.authors}</section></div><div><img className='book-thumbnail' src={book.thumbnail} alt='' /><section className='book-description'>{book.description}</section></div></ >\n              </ListItem>\n            ))}\n          </List>\n        ) : (\n            <h3 className='no-results'>No Results to Display</h3>\n          )}\n      </ >\n    );\n  }\n}\n\nexport default Search;","import React from 'react';\nimport { NavLink } from 'react-router-dom'\n\nfunction Nav () {\n  return (\n    <>\n      <div className='navbar'><span className='nav-title'>Google Books Search</span> <div className='navbar-links'><NavLink\n        to=\"/search\"\n        className='nav-link'\n        activeStyle={{\n          fontWeight: \"bold\",\n          textDecoration: 'none'\n        }}\n      >Search</NavLink> | <NavLink\n        to=\"/saved\"\n        className='nav-link'\n        activeStyle={{\n          fontWeight: \"bold\",\n          textDecoration: 'none'\n        }}\n      >Saved</NavLink></div></div>\n      {/* <div className='navbar'><span className='nav-title'>Google Books Search</span> <div className='navbar-links'><a className='nav-link' href='/search'>Search</a> | <a className='nav-link' href='/saved'>Saved</a></div></div> */}\n    </ >\n  );\n}\n\nexport default Nav;\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Saved from './pages/Saved'\nimport Search from './pages/Search'\nimport Nav from './components/Nav'\n\nfunction App () {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path='/' component={Search} />\n          <Route exact path='/search' component={Search} />\n          <Route exact path='/saved' component={Saved} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}