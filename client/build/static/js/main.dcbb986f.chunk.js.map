{"version":3,"sources":["utils/API.js","components/BtnDelete/index.js","components/List/index.js","pages/Saved.js","components/BtnSave/index.js","components/Form/index.js","pages/Search.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["API","getBooks","axios","get","getBook","id","saveBook","theUrl","then","response","data","_response$data$volume","volumeInfo","title","authors","description","previewLink","thumbnail","imageLinks","post","catch","error","console","log","deleteBook","delete","searchGoogle","query","theQuery","theTitle","trim","theAuthor","author","theSubject","subject","split","join","BtnDelete","props","react_default","a","createElement","Object","assign","className","role","tabIndex","List","_ref","children","ListItem","_ref2","Saved","state","books","loadBooks","res","_this","setState","err","event","target","getAttribute","this","_this2","Fragment","length","map","book","key","href","rel","components_BtnDelete","data-id","onClick","src","alt","Component","BtnSave","Input","FormBtn","style","float","marginBottom","Search","savedBookIds","getSavedBookIds","forEach","i","push","theId","updateSaved","saved","objectSpread","handleInputChange","_event$target","name","value","defineProperty","handleFormSubmit","preventDefault","items","includes","onChange","onSubmit","placeholder","components_BtnSave","Nav","App","react_router_dom","components_Nav","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.dcbb986f.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'https://www.googleapis.com/books/v1/volumes?q='\nconst apiKey = '&key=AIzaSyBnwnrcNwOsL8hcsCgR-0LE-pyvCDE0s5I'\n\nexport default {\n  // Gets all books\n  getBooks: function () {\n    return axios.get('/api/books')\n  },\n  // Gets the book with the given id\n  getBook: function (id) {\n    return axios.get('/api/books/' + id)\n  },\n  // Saves a book to the database\n  saveBook: function (id) {\n    let theUrl = 'https://www.googleapis.com/books/v1/volumes/' + id\n    axios.get(theUrl)\n      .then(function (response) {\n        const id = response.data.id;\n        const { title, authors, description, previewLink } = response.data.volumeInfo;\n        const thumbnail = response.data.volumeInfo.imageLinks.thumbnail;\n        // console.log(response.data);\n        // console.log(id, title, authors, description, previewLink, thumbnail);\n        return axios.post('/api/books', {\n          id,\n          title,\n          authors,\n          description,\n          previewLink,\n          thumbnail\n        });\n        // handle success\n        // console.log(response.data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n    // .then(function () {\n    //   // always executed\n    // });\n  },\n  // Deletes the book with the given id\n  deleteBook: function (id) {\n    return axios.delete('/api/books/' + id)\n  },\n  searchGoogle: function (query) {\n    let theQuery = ''\n    const theTitle = query.title.trim();\n    const theAuthor = query.author.trim();\n    const theSubject = query.subject.trim();\n    if (theTitle) {\n      theQuery = 'intitle:' + theTitle.split(' ').join('+');\n    }\n    if (theAuthor) {\n      if (theQuery) { theQuery += '+' };\n      theQuery += 'inauthor:' + theAuthor.split(' ').join('+');\n    }\n    if (theSubject) {\n      if (theQuery) { theQuery += '+' };\n      theQuery += 'subject:' + theSubject.split(' ').join('+');\n    }\n    // console.log(theQuery);\n    return axios.get(baseUrl + theQuery + apiKey)\n  }\n}","import React from 'react'\nimport '../components.css'\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction BtnDelete (props) {\n  return (\n    <span className='btn-delete' {...props} role='button' tabIndex='0'>\n      Remove from Saved\n    </span>\n  )\n}\n\nexport default BtnDelete\n","import React from 'react'\nimport './style.css'\n\n// This file exports both the List and ListItem components\n\nexport function List ({ children }) {\n  return (\n    <div className='list-overflow-container'>\n      <ul className='list-group'>{children}</ul>\n    </div>\n  )\n}\n\nexport function ListItem ({ children }) {\n  return <li className='list-group-item'>{children}</li>\n}\n","import React, { Component } from 'react';\nimport API from '../utils/API';\nimport BtnDelete from '../components/BtnDelete';\nimport { List, ListItem } from '../components/List';\n// import { Input, TextArea, FormBtn } from '../components/Form';\n\n//Renders all books saved to the Mongo database. User has an option to 'View' the book, bringing them to the book on Google Books, or 'Delete' a book, removing it from the Mongo database.\n\nclass Saved extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount () {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res => this.setState({ books: res.data }))\n      .catch(err => console.log(err));\n  };\n\n  deleteBook = (event) => {\n    API.deleteBook(event.target.getAttribute('data-id'))\n      .then(res => {\n        this.loadBooks()\n      })\n      .catch(err => console.log(err));\n  }\n\n  render () {\n    return (\n      <>\n        <h1>Saved</h1>\n        {this.state.books.length ? (\n          <List>\n            {this.state.books.map(book => (\n              <ListItem key={book.id}>\n                <>\n                  <section className='book-buttons'><a href={book.previewLink} target='_blank' rel='noopener noreferrer'>View</a> <BtnDelete data-id={book.id} onClick={this.deleteBook} /></section>\n                  <strong>{book.title}</strong> <strong>by {book.authors}</strong><br /><div><img className='book-thumbnail' src={book.thumbnail} alt='' /><section className='book-description'>{book.description}</section></div><br /><hr /></ >\n              </ListItem>\n            ))}\n          </List>\n        ) : (\n            <h3>No Results to Display</h3>\n          )}\n\n        {/* <h1>Saved</h1>\n        {\n          this.state.books.length ? (\n            <List>\n              {this.state.books.map(book => (\n                <ListItem key={book._id}>\n                  <a href={'/books/' + book._id}>\n                    <strong>\n                      {book.title} by {book.author}\n                    </strong>\n                  </a>\n                  <BtnView />\n                  <BtnDelete />\n                </ListItem>\n              ))}\n            </List>\n          ) : (\n              <h3>No Results to Display</h3>\n            )\n        } */}\n      </ >\n    );\n  }\n}\n\nexport default Saved;\n","import React from 'react'\nimport '../components.css'\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction BtnSave (props) {\n  return (\n    <span className='btn-save' {...props} role='button' tabIndex='0'>\n      Add to Saved\n    </span>\n  )\n}\n\nexport default BtnSave\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { Component } from 'react';\nimport API from '../utils/API';\nimport BtnSave from '../components/BtnSave';\nimport BtnDelete from '../components/BtnDelete';\nimport { List, ListItem } from '../components/List';\nimport { Input, FormBtn } from '../components/Form';\n// import { Input, TextArea, FormBtn } from '../components/Form';\nimport '../App.css'\n\n\n//User can search for books via the Google Books API and render them here. User has the option to 'View' a book, bringing them to the book on Google Books, or 'Save' a book, saving it to the Mongo database.\n\nclass Search extends Component {\n  state = {\n    books: [],\n    savedBookIds: [],\n    title: '',\n    author: '',\n    subject: ''\n  };\n\n  componentDidMount () {\n    this.getSavedBookIds();\n  }\n\n  getSavedBookIds = () => {\n    API.getBooks()\n      .then(res => {\n        let savedBookIds = [];\n        res.data.forEach((book, i) => {\n          savedBookIds.push(book.id)\n        })\n        console.log(savedBookIds);\n        this.setState({ savedBookIds: savedBookIds })\n      })\n      .catch(err => console.log(err));\n  }\n\n  saveBook = (event) => {\n    const theId = event.target.getAttribute('data-id')\n    API.saveBook(theId)\n    // .then(res => {\n    this.updateSaved(theId, true)\n    // })\n    // .catch(err => console.log(err));\n  }\n\n  getBook = event => {\n    API.getBook(event.target.getAttribute('data-id'))\n      .then(res => this.setState({ books: res.data }))\n      .catch(err => console.log(err));\n  }\n\n  deleteBook = (event) => {\n    const theId = event.target.getAttribute('data-id')\n    API.deleteBook(theId)\n      .then(res => {\n        this.updateSaved(theId, false)\n      })\n      .catch(err => console.log(err));\n  }\n\n  updateSaved = (theId, saved) => {\n    let books = this.state.books;\n    for (let i = 0; i < books.length; i++) {\n      console.log(i);\n      if (books[i].id === theId) {\n        books[i] = { ...books[i], saved: saved };\n        this.setState({ books })\n        console.log(this.state.books[i]);\n        break;\n      }\n    }\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.title || this.state.author || this.state.subject) {\n      API.searchGoogle({\n        title: this.state.title,\n        author: this.state.author,\n        subject: this.state.subject\n      })\n        .then(res => {\n          let books = [];\n          res.data.items.forEach((book, i) => {\n            let id = ''\n            let title = ''\n            let authors = ''\n            let description = ''\n            let previewLink = ''\n            let thumbnail = ''\n            let saved = false\n            if (book.id) {\n              id = book.id;\n            }\n            if (book.volumeInfo.title) {\n              title = book.volumeInfo.title;\n            }\n            if (book.volumeInfo.authors) {\n              authors = book.volumeInfo.authors;\n              if (authors.length > 1) {\n                authors = book.volumeInfo.authors.join(', ');\n              }\n            }\n            if (book.volumeInfo.description) {\n              description = book.volumeInfo.description;\n            }\n            if (book.volumeInfo.previewLink) {\n              previewLink = book.volumeInfo.previewLink;\n            }\n            if ('imageLinks' in book.volumeInfo) {\n              if ('thumbnail' in book.volumeInfo.imageLinks) {\n                thumbnail = book.volumeInfo.imageLinks.thumbnail;\n              }\n            }\n            if (this.state.savedBookIds.includes(book.id)) { saved = true }\n            books.push({\n              id,\n              title,\n              authors,\n              description,\n              previewLink,\n              thumbnail,\n              saved\n            });\n          });\n          this.setState({\n            books,\n            title: '',\n            author: '',\n            subject: ''\n          });\n        })\n        .catch(err => console.log(err));\n    }\n  };\n\n\n  render () {\n    return (\n      <>\n        <h1>Book Search</h1>\n        <form>\n          <Input\n            value={this.state.title}\n            onChange={this.handleInputChange}\n            onSubmit={this.handleFormSubmit}\n            name='title'\n            placeholder='Title'\n          />\n          <Input\n            value={this.state.author}\n            onChange={this.handleInputChange}\n            onSubmit={this.handleFormSubmit}\n            name='author'\n            placeholder='Author'\n          />\n          <Input\n            value={this.state.subject}\n            onChange={this.handleInputChange}\n            onSubmit={this.handleFormSubmit}\n            name='subject'\n            placeholder='Subject'\n          />\n          <FormBtn onClick={this.handleFormSubmit}>Search</FormBtn>\n        </form>\n        <h1>Results</h1>\n        {this.state.books.length ? (\n          <List>\n            {this.state.books.map(book => (\n              <ListItem key={book.id}>\n                <>\n                  <section className='book-buttons'><a href={book.previewLink} target='_blank' rel='noopener noreferrer'>View</a> {book.saved ? <BtnDelete data-id={book.id} onClick={this.deleteBook} /> : <BtnSave data-id={book.id} onClick={this.saveBook} />}</section>\n                  <strong>{book.title}</strong> <strong>by {book.authors}</strong><br /><div><img className='book-thumbnail' src={book.thumbnail} alt='' /><section className='book-description'>{book.description}</section></div><br /><hr /></ >\n              </ListItem>\n            ))}\n          </List>\n        ) : (\n            <h3>No Results to Display</h3>\n          )}\n      </ >\n    );\n  }\n}\n\nexport default Search;","import React from 'react';\n\nfunction Nav() {\n  return (\n    <>\n      <span className='nav-title'>Google Books</span> <a className='nav-link' href='/search'>Search</a> <a className='nav-link' href='/saved'>Saved</a>\n    </ >\n  );\n}\n\nexport default Nav;\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Saved from './pages/Saved'\nimport Search from './pages/Search'\nimport Nav from './components/Nav'\n\nfunction App () {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path='/' component={Search} />\n          <Route exact path='/search' component={Search} />\n          <Route exact path='/saved' component={Saved} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}